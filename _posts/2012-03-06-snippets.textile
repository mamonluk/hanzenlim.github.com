---
layout: post
title: Java Thread
date: 2012-03-01 17:40

---

#Java Notes 
* Processes has its own copy of everything
* In java, thread also has its own copy of data variable, tested it using the ff code
{% highlight java %}

import java.util.logging.Level;
import java.util.logging.Logger;

public class threadtest2 implements Runnable {

    private int x=0;
    Thread t;
   
    public threadtest2(String name)    
    {
        t=new Thread(this, name);
        t.start();
       
    }
    @Override
    public void run() {
        
        this.x=40;
        
        if(t.getName().equals("first"))
            this.x=50;
        
      System.out.println(t.getName());
      System.out.println(this.x);
        
        
    }
   
    public static void main(String args[])
    {
   
          threadtest2  t1=new threadtest2("first");
          threadtest2 t2= new threadtest2("second");
        try {
               
                    t1.t.join();
                    t2.t.join();
        } catch (InterruptedException ex) {
            Logger.getLogger(threadtest2.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }
    
}
{% endhighlight %}


